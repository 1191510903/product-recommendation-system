在原有代码的基础上做出的一些性能优化，以及一些成果：（重点）

原代码（烂）：
1. 用户的每一次浏览行为都要进行磁盘IO记录（效率最低）
2. 用户每次请求某个类目下的商品列表的时候对应的一二级类目也都要去查数据库（效率次低）
3. 用户每次请求相同类目下的所有商品的时候都要查数据库（效率低）

新代码（略优）：
1. 对于用户的点击行为不是每点击一次就去向数据库中插入数据（放入缓存..计划这样做...），所以这部分的时间就省去了
2. 对于一二级类目在项目一启动的时候就放入application域中，而不是放入session域中。
3. 对不同类目下的商品类目列表编号，已存在与application中就不再查询（待定）

成果：
在Apache Bench的压力测试的数据如下：

在1000的并发用户数以及1000的并发请求数情况下优化后的结果：

吞吐率（服务器每秒处理的请求数）：

20#/sec --> 272#/sec

客户端的平均请求等待时间：

47s --> 3.4s

Percentage of the requests served within a certain time (ms)
  50%   1571（50%的请求在1571ms内完成）
  66%   1952
  75%   2187
  80%   2396
  90%   2541
  95%   2791
  98%   2999
  99%   3092
 100%   3405 (longest request)

注：数据的优化情况是从原代码1,2优化到新代码1,2的情况(重复的商品列表暂时还没有做处理)




